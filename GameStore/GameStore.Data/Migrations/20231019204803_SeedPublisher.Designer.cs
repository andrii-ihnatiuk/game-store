// <auto-generated />
using System;
using GameStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStore.Data.Migrations
{
    [DbContext(typeof(GameStoreDbContext))]
    [Migration("20231019204803_SeedPublisher")]
    partial class SeedPublisher
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameStore.Data.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<Guid?>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("UnitInStock")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("073f790e-a105-491d-965c-946e841c3b3e"),
                            Alias = "zelda-breath-of-the-wild",
                            Description = "An action-adventure game in an open world.",
                            Discontinued = false,
                            Name = "The Legend of Zelda: Breath of the Wild",
                            Price = 1500.2m,
                            PublisherId = new Guid("073f790e-a105-491d-965c-946e841c3b3e"),
                            UnitInStock = (short)50
                        },
                        new
                        {
                            Id = new Guid("04b04522-e758-4f8c-b58f-f59dd8de54b5"),
                            Alias = "gta-v",
                            Description = "An open-world action-adventure game.",
                            Discontinued = true,
                            Name = "Grand Theft Auto V",
                            Price = 500m,
                            PublisherId = new Guid("04b04522-e758-4f8c-b58f-f59dd8de54b5"),
                            UnitInStock = (short)32
                        });
                });

            modelBuilder.Entity("GameStore.Data.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenre");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("073f790e-a105-491d-965c-946e841c3b3e"),
                            GenreId = new Guid("dd2bf352-9cfd-4b88-b46f-08217104f90d")
                        },
                        new
                        {
                            GameId = new Guid("073f790e-a105-491d-965c-946e841c3b3e"),
                            GenreId = new Guid("e96511b9-e864-44cc-899f-8313609ffb63")
                        },
                        new
                        {
                            GameId = new Guid("04b04522-e758-4f8c-b58f-f59dd8de54b5"),
                            GenreId = new Guid("e96511b9-e864-44cc-899f-8313609ffb63")
                        });
                });

            modelBuilder.Entity("GameStore.Data.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatform");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("073f790e-a105-491d-965c-946e841c3b3e"),
                            PlatformId = new Guid("5efe1909-c0b0-440e-8915-2831570816ec")
                        },
                        new
                        {
                            GameId = new Guid("04b04522-e758-4f8c-b58f-f59dd8de54b5"),
                            PlatformId = new Guid("ead8a2bf-e751-47a9-a2fc-e8b6f643b0c8")
                        },
                        new
                        {
                            GameId = new Guid("04b04522-e758-4f8c-b58f-f59dd8de54b5"),
                            PlatformId = new Guid("5efe1909-c0b0-440e-8915-2831570816ec")
                        });
                });

            modelBuilder.Entity("GameStore.Data.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentGenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("073f790e-a105-491d-965c-946e841c3b3e"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("04b04522-e758-4f8c-b58f-f59dd8de54b5"),
                            Name = "RTS",
                            ParentGenreId = new Guid("073f790e-a105-491d-965c-946e841c3b3e")
                        },
                        new
                        {
                            Id = new Guid("ead8a2bf-e751-47a9-a2fc-e8b6f643b0c8"),
                            Name = "TBS",
                            ParentGenreId = new Guid("073f790e-a105-491d-965c-946e841c3b3e")
                        },
                        new
                        {
                            Id = new Guid("5efe1909-c0b0-440e-8915-2831570816ec"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("13ba20d2-42fc-4eaa-a7f9-900782cabfc3"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("b3562f18-5e7c-411a-ab76-b675b78bd23d"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("2ba0604c-5515-470c-a500-58b60e8be000"),
                            Name = "Rally",
                            ParentGenreId = new Guid("b3562f18-5e7c-411a-ab76-b675b78bd23d")
                        },
                        new
                        {
                            Id = new Guid("e0e725ed-50ed-4ff7-94e7-38d0e1d2fa39"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("b3562f18-5e7c-411a-ab76-b675b78bd23d")
                        },
                        new
                        {
                            Id = new Guid("927cc631-c4f1-4feb-8a0c-9db6cd43402a"),
                            Name = "Formula",
                            ParentGenreId = new Guid("b3562f18-5e7c-411a-ab76-b675b78bd23d")
                        },
                        new
                        {
                            Id = new Guid("5d7545f5-a77a-4632-89c6-40f8756d2f75"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("b3562f18-5e7c-411a-ab76-b675b78bd23d")
                        },
                        new
                        {
                            Id = new Guid("e96511b9-e864-44cc-899f-8313609ffb63"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("f82e27c8-760e-4cb8-866f-60bb33caeaac"),
                            Name = "FPS",
                            ParentGenreId = new Guid("e96511b9-e864-44cc-899f-8313609ffb63")
                        },
                        new
                        {
                            Id = new Guid("837e2c69-c602-4038-9754-47b9c005a0a8"),
                            Name = "TPS",
                            ParentGenreId = new Guid("e96511b9-e864-44cc-899f-8313609ffb63")
                        },
                        new
                        {
                            Id = new Guid("dd2bf352-9cfd-4b88-b46f-08217104f90d"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("d9eaef23-9680-4d25-869b-4ed91847fd03"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("956c4baf-e989-4046-b6cb-1d98df33cf6d"),
                            Name = "Misc."
                        });
                });

            modelBuilder.Entity("GameStore.Data.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = new Guid("073f790e-a105-491d-965c-946e841c3b3e"),
                            Type = "mobile"
                        },
                        new
                        {
                            Id = new Guid("04b04522-e758-4f8c-b58f-f59dd8de54b5"),
                            Type = "browser"
                        },
                        new
                        {
                            Id = new Guid("ead8a2bf-e751-47a9-a2fc-e8b6f643b0c8"),
                            Type = "desktop"
                        },
                        new
                        {
                            Id = new Guid("5efe1909-c0b0-440e-8915-2831570816ec"),
                            Type = "console"
                        });
                });

            modelBuilder.Entity("GameStore.Data.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = new Guid("073f790e-a105-491d-965c-946e841c3b3e"),
                            CompanyName = "Activision",
                            Description = "Activision Publishing, Inc. is an American video game publisher based in Santa Monica, California.",
                            HomePage = "https://www.activision.com/"
                        },
                        new
                        {
                            Id = new Guid("04b04522-e758-4f8c-b58f-f59dd8de54b5"),
                            CompanyName = "Electronic Arts",
                            Description = "Electronic Arts Inc. is a global leader in digital interactive entertainment.",
                            HomePage = "https://www.ea.com/"
                        },
                        new
                        {
                            Id = new Guid("ead8a2bf-e751-47a9-a2fc-e8b6f643b0c8"),
                            CompanyName = "Ubisoft",
                            Description = "Ubisoft Entertainment SA is a French video game company headquartered in Montreal.",
                            HomePage = "https://www.ubisoft.com/"
                        });
                });

            modelBuilder.Entity("GameStore.Data.Entities.Game", b =>
                {
                    b.HasOne("GameStore.Data.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("GameStore.Data.Entities.GameGenre", b =>
                {
                    b.HasOne("GameStore.Data.Entities.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Data.Entities.Genre", "Genre")
                        .WithMany("GenreGames")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameStore.Data.Entities.GamePlatform", b =>
                {
                    b.HasOne("GameStore.Data.Entities.Game", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.Data.Entities.Platform", "Platform")
                        .WithMany("PlatformGames")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("GameStore.Data.Entities.Genre", b =>
                {
                    b.HasOne("GameStore.Data.Entities.Genre", null)
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentGenreId");
                });

            modelBuilder.Entity("GameStore.Data.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("GameStore.Data.Entities.Genre", b =>
                {
                    b.Navigation("GenreGames");

                    b.Navigation("SubGenres");
                });

            modelBuilder.Entity("GameStore.Data.Entities.Platform", b =>
                {
                    b.Navigation("PlatformGames");
                });

            modelBuilder.Entity("GameStore.Data.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
